# -*- cperl -*-

#------------------------------------------------------------------------

=item public [GlobalPipeline] available();

Class method to return available global pipelines

=cut
#------------------------------------------------------------------------
  sub available {
    return shift->query( Status => ISGA::PipelineStatus->available(), OrderBy => 'Name' );
  }

#------------------------------------------------------------------------

=item public [GlobalPipeline] published();

Class method to return published global pipelines

=cut
#------------------------------------------------------------------------
  sub published {
    return shift->query( Status => ISGA::PipelineStatus->new( Name => 'Published' ), OrderBy => 'Name' );
  }

#------------------------------------------------------------------------

=item public [GlobalPipeline] query();

Wrapper around query method to parse objects into subclass if it exists for this pipeline.

=cut
#------------------------------------------------------------------------
  sub query { 

    my $class = shift;
    
    my $results = $class->NEXT::query(@_);

    # hack to promote pipelines to subclass where that subclass has been defined
    foreach ( @$results ) {

      if ( my $subclass = $_->getSubClass ) {
	my $full_subclass = $class . '::' . $subclass;
	eval "require $full_subclass";
	$full_subclass->can('new') and bless $_, $full_subclass;
      }
    }

    return $results;
  }
  
