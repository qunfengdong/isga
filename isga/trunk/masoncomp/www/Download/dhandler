<%args> # -*- cperl -*-
 $file_resource => undef
 $genome_feature => undef
 $run_evidence_download => undef
 $upstream => 0
 $downstream => 0
</%args>

<%perl>

# lets start with a security check
my $account = ISGA::Login->getAccount or X::User::Denied::RequiresLogin->throw();

# and save a spot for a fh
my $fh;

if ( $file_resource ) {

  # permission check
  $account->mayReadFileResource($file_resource) or X::User::Denied->throw();

  my $name = $file_resource->getUserName;

  $r->headers_out->set('X-Sendfile' => $file_resource->getPath());
  $r->headers_out->set('Content-Type' => 'application/octet-stream');
  $r->headers_out->set('Content-Disposition' => "attachment; filename=\"$name\"");
  return();

# take on the new evidence thingy
} elsif ( $run_evidence_download ) {

  # permission check
  $account->mayRead($run_evidence_download->getRun) or X::User::Denied->throw();

  my $name = $run_evidence_download->getFileName;

  $r->headers_out->set('X-Sendfile' => $run_evidence_download->getFilePath);
  $r->headers_out->set('Content-Type' => 'application/octet-stream');
  $r->headers_out->set('Content-Disposition' => "attachment; filename=\"$name\"");
  return();

} elsif ( $genome_feature ) {

  my $residues = '';
  my $locus = '';
  if ($genome_feature->isa('ISGA::Gene')) {
	  $locus = $genome_feature->getLocus;
	  $residues = $genome_feature->getUpstream($upstream) . $genome_feature->getResidues . $genome_feature->getDownstream($downstream);
  } elsif ($genome_feature->isa('ISGA::CDS')) {
	  $locus = $genome_feature->getmRNA->getGene->getLocus;
	  $residues = $genome_feature->getResidues;
  }

  $m->clear_buffer();

  $m->print(">$locus\n$residues");
  $m->flush_buffer();
  $m->abort();

} else { X::User->throw( message => 'You have not supplied a resource to download'); }

</%perl>

<%flags>
 inherit => undef
</%flags>

<%once>
my $admin = ISGA::Group->new(Name => 'Run Administrators');
</%once>

<%init>
$r->content_type('application/octet-stream');
</%init>
