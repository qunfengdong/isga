<%args> # -*- cperl -*-
 $genome_feature
 $upstream => 0
 $downstream => 0
</%args>


<%perl>

# use the type of RNA this gene produces to find that rna
if( $genome_feature->isa( 'ISGA::Gene' ) ) {

  my $type = 'ISGA::' . $genome_feature->getType;
  $genome_feature = $type->new( Gene => $genome_feature );
}

if ( $genome_feature->isa( 'ISGA::CDS' ) ) {

  my $mrna = $genome_feature->getmRNA;
  my $gene = $mrna->getGene;

  $m->comp('/GenomeFeature/view_gene.mas', cds => $genome_feature, mrna => $mrna, gene => $gene, 
                                           upstream => $upstream, downstream => $downstream );

} elsif ( $genome_feature->isa( 'ISGA::mRNA' ) ) {

  my $cds = ISGA::CDS->new( mRNA => $genome_feature );

  $m->comp('/GenomeFeature/view_gene.mas', cds => $cds, mrna => $genome_feature, gene => $genome_feature->getGene, 
                                           upstream => $upstream, downstream => $downstream );

} elsif ( $genome_feature->isa( 'ISGA::tRNA' ) ) {

  $m->comp('/GenomeFeature/view_trna.mas', trna => $genome_feature, gene => $genome_feature->getGene,
                                           upstream => $upstream, downstream => $downstream );

} elsif ( $genome_feature->isa( 'ISGA::rRNA' ) ) {

  $m->comp('/GenomeFeature/view_rrna.mas', rrna => $genome_feature, gene => $genome_feature->getGene,
                                           upstream => $upstream, downstream => $downstream );

} else {

  my $type = ref( $genome_feature );

  X::API->throw( message => "We do not know how to handle a genome feature of type $type" );

}

</%perl>
