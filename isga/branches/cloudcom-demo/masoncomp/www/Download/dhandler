<%args> # -*- cperl -*-
 $file_resource => undef
 $run_cluster => undef
 $genome_feature => undef
 $upstream => 0
 $downstream => 0
</%args>

<%perl>

my $contents;

if ( $file_resource ) {

  $file_resource->getCreatedBy == ISGA::Login->getAccount or X::User::Denied->throw();

  warn "load the file\n";

  $m->clear_buffer();

  open my $fh, '<', $file_resource->getPath();
  
  if ( $file_resource->getSize > 50000000 ) {

    while (<$fh>) {
      $m->print($_);
    }
  } else {
    $m->print($m->file($file_resource->getPath()));
  }

  warn "loaded the file\n";

  $m->flush_buffer();
  $m->abort();

} elsif ( $run_cluster ) {

  my $run = $run_cluster->getRun;
  $run->getCreatedBy => ISGA::Login->getAccount or X::User::Denied->throw();

  $contents = $m->file($run_cluster->getPath());

} elsif ( $genome_feature ) {
  my $locus = '';
  my $residues = '';
  if ($genome_feature->isa('ISGA::Gene')) {
	  $locus = $genome_feature->getLocus;
	  $residues = $genome_feature->getUpstream($upstream) . $genome_feature->getResidues . $genome_feature->getDownstream($downstream);
  } elsif ($genome_feature->isa('ISGA::CDS')) {
	  $locus = $genome_feature->getmRNA->getGene->getLocus;
	  $residues = $genome_feature->getResidues;
  }
  $contents = ">$locus\n$residues";
}

$m->clear_buffer();

$m->print( $contents );

$m->flush_buffer();
$m->abort();

</%perl>

<%flags>
 inherit => undef
</%flags>
